[{"/Users/digi-angler/Develop/Front-end/discord-clone/src/app/store.js":"1","/Users/digi-angler/Develop/Front-end/discord-clone/src/App.js":"2","/Users/digi-angler/Develop/Front-end/discord-clone/src/features/Sidebar.js":"3","/Users/digi-angler/Develop/Front-end/discord-clone/src/features/Chat.js":"4","/Users/digi-angler/Develop/Front-end/discord-clone/src/features/ChatHeader.js":"5","/Users/digi-angler/Develop/Front-end/discord-clone/src/features/Login.js":"6","/Users/digi-angler/Develop/Front-end/discord-clone/src/features/Message.js":"7","/Users/digi-angler/Develop/Front-end/discord-clone/src/features/SidebarChannel.js":"8","/Users/digi-angler/Develop/Front-end/discord-clone/src/features/appSlice.js":"9","/Users/digi-angler/Develop/Front-end/discord-clone/src/features/userSlice.js":"10","/Users/digi-angler/Develop/Front-end/discord-clone/src/features/firebase.js":"11","/Users/digi-angler/Develop/Front-end/discord-clone/src/index.js":"12"},{"size":258,"mtime":1606392797155,"results":"13","hashOfConfig":"14"},{"size":1128,"mtime":1606392762187,"results":"15","hashOfConfig":"14"},{"size":3023,"mtime":1606405462955,"results":"16","hashOfConfig":"14"},{"size":2526,"mtime":1606456145393,"results":"17","hashOfConfig":"14"},{"size":1095,"mtime":1606393287652,"results":"18","hashOfConfig":"14"},{"size":564,"mtime":1606393338791,"results":"19","hashOfConfig":"14"},{"size":550,"mtime":1606393403474,"results":"20","hashOfConfig":"14"},{"size":547,"mtime":1606393453069,"results":"21","hashOfConfig":"14"},{"size":580,"mtime":1606393563981,"results":"22","hashOfConfig":"14"},{"size":462,"mtime":1606393604564,"results":"23","hashOfConfig":"14"},{"size":672,"mtime":1606394255144,"results":"24","hashOfConfig":"14"},{"size":644,"mtime":1606376731212,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"jj2p36",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/digi-angler/Develop/Front-end/discord-clone/src/app/store.js",[],"/Users/digi-angler/Develop/Front-end/discord-clone/src/App.js",[],"/Users/digi-angler/Develop/Front-end/discord-clone/src/features/Sidebar.js",["53"],"import ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport SignalCellularAltIcon from \"@material-ui/icons/SignalCellularAlt\";\nimport InfoOutLinedIcon from \"@material-ui/icons/InfoOutlined\";\nimport CallIcon from \"@material-ui/icons/Call\";\nimport MicIcon from \"@material-ui/icons/Mic\";\nimport HeadsetIcon from \"@material-ui/icons/Headset\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport { Avatar } from \"@material-ui/core\";\n\nimport React, { useEffect, useState } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport \"./Sidebar.css\";\nimport SidebarChannel from \"./SidebarChannel\";\nimport db, { auth } from \"./firebase\";\nimport { selectUser } from \"./userSlice\";\n\nexport default function Sidebar() {\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch;\n  const [channels, setChannels] = useState([]);\n\n  useEffect(() => {\n    db.collection(\"channels\").onSnapshot((snapshot) =>\n      setChannels(\n        snapshot.docs.map((doc) => ({\n          id: doc.id,\n          channel: doc.data(),\n        }))\n      )\n    );\n  }, []);\n\n  console.log(channels);\n\n  const handleAddChannel = () => {\n    const channelName = prompt(\"Enter a new channel name\");\n    if (channelName) {\n      db.collection(\"channels\").add({\n        channelName: channelName,\n      });\n    }\n  };\n\n  return (\n    <div className=\"sidebar\">\n      <div className=\"sidebar__top\">\n        <h2>Digi-Angler channel</h2>\n        <ExpandMore />\n      </div>\n      <div className=\"sidebar__channels\">\n        <div className=\"sidebar__channelsHeader\">\n          <div className=\"sidebar__header\">\n            <ExpandMore />\n            <h4>Text Channels</h4>\n          </div>\n          <AddIcon onClick={handleAddChannel} className=\"sidebar__addChannel\" />\n        </div>\n        <div className=\"sidebar__channelsList\">\n          {channels.map(({ id, channel }) => {\n            return (\n              <SidebarChannel\n                key={id}\n                id={id}\n                channelName={channel.channelName}\n              />\n            );\n          })}\n        </div>\n      </div>\n      <div className=\"sidebar__voice\">\n        <SignalCellularAltIcon\n          className=\"sidebar__voiceIcon\"\n          fontSize=\"large\"\n        />\n        <div className=\"sidebar__voiceInfo\">\n          <h3>Voice connected</h3>\n          <p>Stream</p>\n        </div>\n        <div className=\"sidebar__voiceIcons\">\n          <InfoOutLinedIcon />\n          <CallIcon />\n        </div>\n      </div>\n      <div className=\"sidebar__profile\">\n        <Avatar\n          src={user.photo}\n          onClick={() => {\n            auth.signOut();\n          }}\n        />\n        <div className=\"sidebar__profileInfo\">\n          <h3>{user.displayName}</h3>\n          <p>{user.uid.substring(0, 5)}</p>\n        </div>\n        <div className=\"sidebar__profileIcons\">\n          <MicIcon />\n          <HeadsetIcon />\n          <SettingsIcon />\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/digi-angler/Develop/Front-end/discord-clone/src/features/Chat.js",[],"/Users/digi-angler/Develop/Front-end/discord-clone/src/features/ChatHeader.js",[],"/Users/digi-angler/Develop/Front-end/discord-clone/src/features/Login.js",["54"],"import { Button } from \"@material-ui/core\";\n\nimport React from \"react\";\n\nimport \"./Login.css\";\nimport { auth, provider } from \"./firebase\";\n\nfunction Login() {\n  const signIn = () => {\n    //do clever google login shazz\n    auth.signInWithPopup(provider).catch((error) => error.message);\n  };\n  return (\n    <div className=\"login\">\n      <div className=\"login__logo\">\n        <img src=\"https://cdn.worldvectorlogo.com/logos/discord-logo-color-wordmark-1.svg\" />\n      </div>\n      <Button onClick={signIn}>Sign In</Button>\n    </div>\n  );\n}\n\nexport default Login;\n",["55","56"],"/Users/digi-angler/Develop/Front-end/discord-clone/src/features/Message.js",[],"/Users/digi-angler/Develop/Front-end/discord-clone/src/features/SidebarChannel.js",[],"/Users/digi-angler/Develop/Front-end/discord-clone/src/features/appSlice.js",[],"/Users/digi-angler/Develop/Front-end/discord-clone/src/features/userSlice.js",[],"/Users/digi-angler/Develop/Front-end/discord-clone/src/features/firebase.js",[],"/Users/digi-angler/Develop/Front-end/discord-clone/src/index.js",[],{"ruleId":"57","severity":1,"message":"58","line":22,"column":9,"nodeType":"59","messageId":"60","endLine":22,"endColumn":17},{"ruleId":"61","severity":1,"message":"62","line":16,"column":9,"nodeType":"63","endLine":16,"endColumn":94},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["68"],"no-negated-in-lhs",["69"],"no-global-assign","no-unsafe-negation"]